context.objects = [
    {   # Games Audio
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "games_sink"
            node.description = "Games Audio"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Music Audio
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "music_sink"
            node.description = "Music Audio"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Desktop Audio
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "desktop_sink"
            node.description = "Desktop Audio"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Chrome Audio
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "chrome_sink"
            node.description = "Chrome Audio"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Discord Audio
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "discord_sink"
            node.description = "Discord Audio"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Master Mix
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "master_sink"
            node.description = "Master Mix"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Recorder Sink
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "recorder_sink"
            node.description = "Recorder Sink"
            media.class = Audio/Sink
            audio.position = [ FL FR ]
            monitor.channel-volumes = true
            monitor.passthrough = true
        }
    }
    {   # Microphone Input
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "mic_sink"
            node.description = "Microphone Input"
            media.class = Audio/Source/Virtual
            audio.position = [ FL FR ]
        }
    }
    {   # Discord Microphone
        factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "discord_mic_sink"
            node.description = "Discord Microphone"
            media.class = Audio/Source/Virtual
            audio.position = [ FL FR ]
        }
    }

]

context.modules = [
    {   # Discord LoudMax Compressor
        name = libpipewire-module-filter-chain
        args = {
            node.description = "Discord LM Compressor"
            media.name = "Discord LM Compressor"
            filter.graph = {
                nodes = [
                    {
                        type = ladspa
                        name = loudmax
                        plugin = /usr/lib/ladspa/la_LoudMax64.so
                        label = ldmx_stereo
                        control = {
                            # Threshold - where compression starts
                            "Threshold (dB)" = -19.6323528289795
                            # Output - final output level
                            "Output (dB)" = -13.235294342041
                            # Inter-Sample Peaks - 0=off, 1=on
                            "Inter-Sample Peaks" = 0
                        }
                    }
                ]
            }
            capture.props = {
                node.name = "discord_compressor_input"
                node.description = "Discord Compressor Input"
                media.class = Audio/Sink
                audio.position = [ FL FR ]
            }
            playback.props = {
                node.name = "discord_compressor_output"
                node.description = "Discord Compressor Output"
                media.class = Audio/Source
                audio.position = [ FL FR ]
            }
        }
    }
    {   # Master Gain Control
        name = libpipewire-module-filter-chain
        args = {
            node.description = "Master Gain Control"
            media.name = "Master Gain Control"
            filter.graph = {
                nodes = [
                    {
                        type = ladspa
                        name = gain_plugin
                        plugin = /usr/lib/ladspa/amp.so
                        label = amp_stereo
                        control = {
                            "Gain" = 1.0
                        }
                    }
                ]
            }
            capture.props = {
                node.name = "master_gain_input"
                node.description = "Master Gain Input"
                media.class = Audio/Sink
                audio.position = [ FL FR ]
            }
            playback.props = {
                node.name = "master_gain_output"
                node.description = "Master Gain Output"
                media.class = Audio/Source
                audio.position = [ FL FR ]
            }
        }
    }
]

